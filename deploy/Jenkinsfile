pipeline {
    agent any

    environment {
        ANSIBLE_CONFIG = "${WORKSPACE}/deploy/ansible.cfg" 
    }

    stages {
        stage('Initial cleanup') {
            steps {
                dir("${WORKSPACE}") {
                    deleteDir() // Clean up the workspace
                }
            }
        }

        stage('Checkout SCM') {
            steps {
                git branch: 'main', url: 'https://github.com/GenetH/ansible-config-mgt.git'
            }
        }

        stage('Prepare Ansible For Execution') {
            steps {
                sh 'echo ${WORKSPACE}'
                sh 'sed -i "3 a roles_path=${WORKSPACE}/roles" ${WORKSPACE}/deploy/ansible.cfg'
            }
        }

        stage('Test SSH Connection') {
            steps {
                sshagent(['private-key']) { 
                    sh 'ssh -o StrictHostKeyChecking=no -i /home/ubuntu/.ssh/id_rsa.pem ubuntu@172.31.42.10 exit'
                }
            }
        }

        stage('Run Ansible playbook') {
            steps {
                sshagent(['private-key']) { 
                    ansiblePlaybook(
                        become: true,
                        credentialsId: 'private-key', // Replace with your Jenkins credential ID
                        disableHostKeyChecking: true,
                        installation: 'ansible',
                        inventory: "${WORKSPACE}/inventory/dev.yml",
                        playbook: "${WORKSPACE}/playbooks/site.yml",
                        extraVars: ['ansible_ssh_extra_args': '-vvvv'] // Enable verbose output
                    )
                }
            }
        }

        stage('Clean Workspace after build') {
            steps {
                cleanWs(cleanWhenAborted: true, cleanWhenFailure: true, cleanWhenNotBuilt: true, cleanWhenUnstable: true, deleteDirs: true)
            }
        }
    }
}
